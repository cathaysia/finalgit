use lazy_regex::regex;
use std::sync::LazyLock;

pub(crate) static COMPLEX_ENDSWITH: LazyLock<Vec<(&'static lazy_regex::Regex, &str)>> =
    LazyLock::new(|| {
        vec![
            (regex!(r#"/*.aptitude/config$"#), "aptconf"),
            (regex!(r#"/*.config/git/config$"#), "gitconfig"),
            (regex!(r#"/*.gnupg/gpg.conf$"#), "gpg"),
            (regex!(r#"/*.gnupg/options$"#), "gpg"),
            (regex!(r#"/*.icewm/menu$"#), "icemenu"),
            (regex!(r#"/*.libao$"#), "libao"),
            (regex!(r#"/*.mplayer/config$"#), "mplayerconf"),
            (regex!(r#"/*.pinforc$"#), "pinfo"),
            (regex!(r#"/*.ssh/config$"#), "sshconfig"),
            (regex!(r#"/boot/grub/grub\.conf$"#), "grub"),
            (regex!(r#"/boot/grub/menu\.lst$"#), "grub"),
            (regex!(r#"/debian/control$"#), "debcontrol"),
            (regex!(r#"/debian/copyright$"#), "debcopyright"),
            (regex!(r#"/etc/DIR_COLORS$"#), "dircolors"),
            (regex!(r#"/etc/a2ps\.cfg$"#), "a2ps"),
            (regex!(r#"/etc/aliases$"#), "mailaliases"),
            (regex!(r#"/etc/apt/sources\.list$"#), "debsources"),
            (regex!(r#"/etc/asound\.conf$"#), "alsaconf"),
            (regex!(r#"/etc/blkid\.tab$"#), "xml"),
            (regex!(r#"/etc/blkid\.tab.old$"#), "xml"),
            (regex!(r#"/etc/cdrdao\.conf$"#), "cdrdaoconf"),
            (regex!(r#"/etc/conf\.modules$"#), "modconf"),
            (regex!(r#"/etc/default/cdrdao$"#), "cdrdaoconf"),
            (regex!(r#"/etc/defaults/cdrdao$"#), "cdrdaoconf"),
            (regex!(r#"/etc/dnsmasq\.conf$"#), "dnsmasq"),
            (regex!(r#"/etc/grub\.conf$"#), "grub"),
            (regex!(r#"/etc/host\.conf$"#), "hostconf"),
            (regex!(r#"/etc/hosts\.allow$"#), "hostsaccess"),
            (regex!(r#"/etc/hosts\.deny$"#), "hostsaccess"),
            (regex!(r#"/etc/libao\.conf$"#), "libao"),
            (regex!(r#"/etc/limits$"#), "limits"),
            (regex!(r#"/etc/login\.access$"#), "loginaccess"),
            (regex!(r#"/etc/login\.defs$"#), "logindefs"),
            (regex!(r#"/etc/mail/aliases$"#), "mailaliases"),
            (regex!(r#"/etc/man\.conf$"#), "manconf"),
            (regex!(r#"/etc/modules$"#), "modconf"),
            (regex!(r#"/etc/modules\.conf$"#), "modconf"),
            (regex!(r#"/etc/nanorc$"#), "nanorc"),
            (regex!(r#"/etc/pacman\.conf$"#), "dosini"),
            (regex!(r#"/etc/pam\.conf$"#), "pamconf"),
            (regex!(r#"/etc/pinforc$"#), "pinfo"),
            (regex!(r#"/etc/protocols$"#), "protocols"),
            (regex!(r#"/etc/sensors\.conf$"#), "sensors"),
            (regex!(r#"/etc/sensors3\.conf$"#), "sensors"),
            (regex!(r#"/etc/serial\.conf$"#), "setserial"),
            (regex!(r#"/etc/services$"#), "services"),
            (regex!(r#"/etc/slp\.conf$"#), "slpconf"),
            (regex!(r#"/etc/slp\.reg$"#), "slpreg"),
            (regex!(r#"/etc/slp\.spi$"#), "slpspi"),
            (regex!(r#"/etc/sudoers$"#), "sudoers"),
            (regex!(r#"/etc/sysctl\.conf$"#), "sysctl"),
            (regex!(r#"/etc/udev/cdsymlinks\.conf$"#), "sh"),
            (regex!(r#"/etc/udev/udev\.conf$"#), "udevconf"),
            (regex!(r#"/etc/updatedb\.conf$"#), "updatedb"),
            (regex!(r#"/etc/xinetd\.conf$"#), "xinetd"),
            (regex!(r#"/etc/yum\.conf$"#), "dosini"),
            (regex!(r#"/etc/zprofile$"#), "zsh"),
            (regex!(r#"/usr/share/alsa/alsa\.conf$"#), "alsaconf"),
            (regex!(r#"Xmodmap$"#), "xmodmap"),
            (regex!(r#"bsd$"#), "bsdl"),
            (regex!(r#"esmtprc$"#), "esmtprc"),
            (regex!(r#"hgrc$"#), "cfg"),
            (regex!(r#"lftp/rc$"#), "lftp"),
            (regex!(r#"lpe$"#), "dracula"),
            (regex!(r#"lvs$"#), "dracula"),
        ]
    });

pub(crate) static COMPLEX_STARTSWITH: LazyLock<Vec<(&lazy_regex::Regex, &str)>> =
    LazyLock::new(|| {
        vec![
            (regex!(r#".*/etc/Muttrc\.d/.*"#), "muttrc"),
            (regex!(r#".*/etc/proftpd/.*\.conf.*"#), "apachestyle"),
            (regex!(r#".*/etc/proftpd/conf\..*/.*"#), "apachestyle"),
            (regex!(r#"proftpd\.conf.*"#), "apachestyle"),
            (regex!(r#"access\.conf.*"#), "apache"),
            (regex!(r#"apache\.conf.*"#), "apache"),
            (regex!(r#"apache2\.conf.*"#), "apache"),
            (regex!(r#"httpd\.conf.*"#), "apache"),
            (regex!(r#"srm\.conf.*"#), "apache"),
            (regex!(r#".*/etc/apache2/.*\.conf.*"#), "apache"),
            (regex!(r#".*/etc/apache2/conf\..*/.*"#), "apache"),
            (regex!(r#".*/etc/apache2/mods-.*/.*"#), "apache"),
            (regex!(r#".*/etc/apache2/sites-.*/.*"#), "apache"),
            (regex!(r#".*/etc/httpd/conf\.d/.*\.conf.*"#), "apache"),
            (regex!(r#".*asterisk/.*\.conf.*"#), "asterisk"),
            (regex!(r#".*asterisk.*/.*voicemail\.conf.*"#), "asteriskvm"),
            (regex!(r#".*/named/db\..*"#), "bindzone"),
            (regex!(r#".*/bind/db\..*"#), "bindzone"),
            (regex!(r#"cabal\.project\..*"#), "cabalproject"),
            (regex!(r#"crontab"#), "crontab"),
            (regex!(r#"crontab\..*"#), "crontab"),
            (regex!(r#".*/etc/cron\.d/.*"#), "crontab"),
            (regex!(r#".*/etc/dnsmasq\.d/.*"#), "dnsmasq"),
            (regex!(r#"drac\..*"#), "dracula"),
            (regex!(r#".*/\.fvwm/.*"#), "fvwm"),
            (regex!(r#".*/tmp/lltmp.*"#), "gedcom"),
            (regex!(r#".*/\.gitconfig\.d/.*"#), "gitconfig"),
            (regex!(r#"/etc/gitconfig\.d/.*"#), "gitconfig"),
            (regex!(r#".*/gitolite-admin/conf/.*"#), "gitolite"),
            (regex!(r#"\.gtkrc.*"#), "gtkrc"),
            (regex!(r#"gtkrc.*"#), "gtkrc"),
            (regex!(r#"Prl.*\..*"#), "jam"),
            (regex!(r#"JAM.*\..*"#), "jam"),
            (regex!(r#".*\.properties_??_??_.*"#), "jproperties"),
            (regex!(r#"Kconfig\..*"#), "kconfig"),
            (regex!(r#"lilo\.conf.*"#), "lilo"),
            (regex!(r#".*/etc/logcheck/.*\.d.*/.*"#), "logcheck"),
            (regex!(r#"[mM]akefile.*"#), "make"),
            (regex!(r#"mk"#), "make"),
            (regex!(r#"mak"#), "make"),
            (regex!(r#"dsp"#), "make"),
            (regex!(r#"[rR]akefile.*"#), "ruby"),
            (regex!(r#"reportbug-.*"#), "mail"),
            (regex!(r#".*/etc/modprobe\..*"#), "modconf"),
            // (regex!(r#"\.mutt[ng,]rc.*"#, "muttrc"),
            // (regex!(r#"".*/\.mutt{ng,}/mutt{ng,}rc.*""#, "muttrc"),
            // (regex!(r#"mutt{ng,}rc.*,Mutt{ng,}rc.*"#, "muttrc"),
            (regex!(r#"\.neomuttrc.*"#), "neomuttrc"),
            (regex!(r#".*/\.neomutt/neomuttrc.*"#), "neomuttrc"),
            (regex!(r#"neomuttrc.*"#), "neomuttrc"),
            (regex!(r#"Neomuttrc.*"#), "neomuttrc"),
            (regex!(r#"tmac\..*"#), "nroff"),
            (regex!(r#"/etc/hostname\..*"#), "config"),
            (regex!(r#".*/etc/pam\.d/.*"#), "pamconf"),
            (regex!(r#"\.reminders.*"#), "remind"),
            (regex!(r#"sgml\.catalog.*"#), "catalog"),
            (regex!(r#".*\.vhdl_[0-9].*"#), "vhdl"),
            (regex!(r#".*vimrc.*"#), "vim"),
            (regex!(r#"Xresources.*"#), "xdefaults"),
            (regex!(r#".*/app-defaults/.*"#), "xdefaults"),
            (regex!(r#".*/Xresources/.*"#), "xdefaults"),
            (regex!(r#".*xmodmap.*"#), "xmodmap"),
            (regex!(r#".*/etc/xinetd\.d/.*"#), "xinetd"),
            (regex!(r#".*/etc/yum\.repos\.d/.*"#), "dosini"),
            (regex!(r#"\.zsh.*"#), "zsh"),
            (regex!(r#"\.zlog.*"#), "zsh"),
            (regex!(r#"\.zcompdump.*"#), "zsh"),
            (regex!(r#"zsh.*"#), "zsh"),
            (regex!(r#"zlog.*"#), "zsh"),
        ]
    });

pub(crate) static COMPLEX_COMPLEX: LazyLock<Vec<(&lazy_regex::Regex, &str)>> =
    LazyLock::new(|| {
        vec![
            (regex!(r#".*tmux.*\.conf"#), "tmux"),
            (regex!(r#".*\.git/modules/.*/config"#), "gitconfig"),
            (regex!(r#".*git/config"#), "gitconfig"),
            (
                regex!(r#".*/\.config/systemd/user/.*\.d/.*\.conf"#),
                "systemd",
            ),
            (regex!(r#".*/\.config/upstart/.*\.conf"#), "upstart"),
            (regex!(r#".*/\.config/upstart/.*\.override"#), "upstart"),
            (regex!(r#".*/\.init/.*\.conf"#), "upstart"),
            (regex!(r#".*/\.init/.*\.override"#), "upstart"),
            (regex!(r#".*/LiteStep/.*/.*\.rc"#), "litestep"),
            (regex!(r#".*/etc/.*limits\.conf"#), "limits"),
            (regex!(r#".*/etc/.*limits\.d/.*\.conf"#), "limits"),
            (regex!(r#".*/etc/a2ps/.*\.cfg"#), "a2ps"),
            (
                regex!(r#".*/etc/apt/sources\.list\.d/.*\.list"#),
                "debsources",
            ),
            (regex!(r#".*/etc/httpd/.*\.conf"#), "apache"),
            (regex!(r#".*/etc/init/.*\.conf"#), "upstart"),
            (regex!(r#".*/etc/init/.*\.override"#), "upstart"),
            (regex!(r#".*/etc/initng/.*/.*\.i"#), "initng"),
            (regex!(r#".*/etc/ssh/ssh_config\.d/.*\.conf"#), "sshconfig"),
            (
                regex!(r#".*/etc/ssh/sshd_config\.d/.*\.conf"#),
                "sshdconfig",
            ),
            (regex!(r#".*/etc/sysctl\.d/.*\.conf"#), "sysctl"),
            (regex!(r#"/etc/gitconfig"#), "gitconfig"),
            (regex!(r#".*/etc/systemd/.*\.conf\.d/.*\.conf"#), "systemd"),
            (regex!(r#".*/etc/systemd/system/.*\.d/.*\.conf"#), "systemd"),
            (
                regex!(r#".*/etc/udev/permissions\.d/.*\.permissions"#),
                "udevperm",
            ),
            (regex!(r#".*/etc/xdg/menus/.*\.menu"#), "xml"),
            (regex!(r#".*/usr/.*/gnupg/options\.skel"#), "gpg"),
            (regex!(r#".*/usr/share/upstart/.*\.conf"#), "upstart"),
            (regex!(r#".*/usr/share/upstart/.*\.override"#), "upstart"),
            (regex!(r#".*Eterm/.*\.cfg"#), "eterm"),
            (regex!(r#".*enlightenment/.*\.cfg"#), "c"),
            (regex!(r#"bzr_log\..*"#), "bzr"),
            (regex!(r#"named.*\.conf"#), "named"),
            (regex!(r#"rndc.*\.conf"#), "named"),
            (regex!(r#"rndc.*\.key"#), "named"),
        ]
    });
