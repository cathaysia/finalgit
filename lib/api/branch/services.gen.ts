// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from "./core/CancelablePromise";
import { OpenAPI } from "./core/OpenAPI";
import { request as __request } from "./core/request";
import type {
	GetRepoBranchByRepoPathData,
	GetRepoBranchByRepoPathResponse,
	PostRepoBranchByRepoPathData,
	PostRepoBranchByRepoPathResponse,
	DeleteRepoBranchByRepoPathData,
	DeleteRepoBranchByRepoPathResponse,
	PutRepoBranchByRepoPathData,
	PutRepoBranchByRepoPathResponse,
} from "./types.gen";

/**
 * Get branches of a repository
 * Returns a list of branches for a given repository path.
 * @param data The data for the request.
 * @param data.repoPath
 * @returns BranchInfo A successful response containing the branches.
 * @throws ApiError
 */
export const getRepoBranchByRepoPath = (
	data: GetRepoBranchByRepoPathData = {},
): CancelablePromise<GetRepoBranchByRepoPathResponse> => {
	return __request(OpenAPI, {
		method: "GET",
		url: "/repo/branch/{repo_path}",
		path: {
			repo_path: data.repoPath,
		},
	});
};

/**
 * create a local branch.
 * Rename a local branch.
 * @param data The data for the request.
 * @param data.repoPath
 * @param data.name
 * @returns unknown Success
 * @throws ApiError
 */
export const postRepoBranchByRepoPath = (
	data: PostRepoBranchByRepoPathData = {},
): CancelablePromise<PostRepoBranchByRepoPathResponse> => {
	return __request(OpenAPI, {
		method: "POST",
		url: "/repo/branch/{repo_path}",
		path: {
			repo_path: data.repoPath,
		},
		query: {
			name: data.name,
		},
	});
};

/**
 * Delete remote branch
 * @param data The data for the request.
 * @param data.repoPath
 * @param data.name
 * @returns unknown Success
 * @throws ApiError
 */
export const deleteRepoBranchByRepoPath = (
	data: DeleteRepoBranchByRepoPathData = {},
): CancelablePromise<DeleteRepoBranchByRepoPathResponse> => {
	return __request(OpenAPI, {
		method: "DELETE",
		url: "/repo/branch/{repo_path}",
		path: {
			repo_path: data.repoPath,
		},
		query: {
			name: data.name,
		},
	});
};

/**
 * Rename a local branch.
 * Rename a local branch.
 * @param data The data for the request.
 * @param data.repoPath
 * @param data.to
 * @returns unknown Success
 * @throws ApiError
 */
export const putRepoBranchByRepoPath = (
	data: PutRepoBranchByRepoPathData = {},
): CancelablePromise<PutRepoBranchByRepoPathResponse> => {
	return __request(OpenAPI, {
		method: "PUT",
		url: "/repo/branch/{repo_path}",
		path: {
			repo_path: data.repoPath,
		},
		query: {
			to: data.to,
		},
	});
};
